# name: build

# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - 'main'

# jobs:
#   voteapp-website:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v1

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build contacts and export to Docker
#         uses: docker/build-push-action@v2
#         with:
#           context: apps/vote/
#           file: apps/vote/Dockerfile
#           load: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/voteapp-website:latest

#       - uses: lacework/lw-scanner-action@v0.6.0
#         name: Scan contacts container image for vulnerabitilies using Lacework
#         with:
#           USE_POLICY: true
#           LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
#           LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
#           IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/voteapp-website
#           IMAGE_TAG: latest

#       - name: Build and push frontend
#         uses: docker/build-push-action@v2
#         with:
#           context: apps/vote/
#           file: apps/vote/Dockerfile
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/voteapp-website:latest

#   voteapp-results-site:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v1

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build contacts and export to Docker
#         uses: docker/build-push-action@v2
#         with:
#           context: apps/result/
#           file: apps/result/Dockerfile
#           load: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/voteapp-results-site:latest

#       - uses: lacework/lw-scanner-action@v0.6.0
#         name: Scan contacts container image for vulnerabitilies using Lacework
#         with:
#           USE_POLICY: true
#           LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
#           LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
#           IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/voteapp-results-site
#           IMAGE_TAG: latest

#       - name: Build and push frontend
#         uses: docker/build-push-action@v2
#         with:
#           context: apps/result/
#           file: apps/result/Dockerfile
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/voteapp-results-site:latest

#   publish-worker-to-s3:
#     name: upload-s3
#     runs-on: ubuntu-22.04
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: zip worker dir into tmp folder
#         run: cd apps/worker; zip -r -q /tmp/voteapp-worker.zip .

#       - name: configure aws creds
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: upload artifacts to s3
#         run: aws s3 cp /tmp/voteapp-worker.zip s3://${{ secrets.AWS_BUCKET }}
